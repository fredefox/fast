Program          ::= ClassDecls

ClassDecls       ::= ''
                  |  ClassDecl ClassDecls

ClassDecl        ::= 'class' Name '{'
                         ConstructorDecl NamedMethodDecls RecvDecl
                     '}'

ConstructorDecl  ::= ''
                  |  'new' '(' ParamsEntry ')' '{' Exprs '}'

NamedMethodDecls ::= ''
                  |  NamedMethodDecl NamedMethodDecls

NamedMethodDecl  ::= Name '(' ParamsEntry ')' '{' Exprs '}'

RecvDecl         ::= ''
                  |  'receive' '(' Param ')' '{' Exprs '}'

ParamsEntry      ::= ''
                  |  Params

Params           ::=  Param ParamsOpt

ParamsOpt        ::= ''
                  |  ',' Params

Param            ::= Name

ArgsEntry        ::= ''
                  |  Args

Args             ::= ExprEntry ArgsOpt

ArgsOpt          ::= ''
                  |  ',' Args

Exprs            ::= ''
                  |  ExprEntry ';' Exprs

ExprEntry        ::= Expr0
                  |  Expr1Entry

Expr0            ::= Integer
                  |  String
                  |  Name '(' ArgsEntry ')'
                  |  'self'
                  |  'return' ExprEntry
                  |  'set' 'self' '.' Name '=' ExprEntry
                  |  'set' Name '=' ExprEntry

Expr1Entry       ::= Expr1a
                  |  Expr1b

Expr1a           ::= 'match' ExprEntry Cases Expr1EntryOpt
                  |  'send' '(' ExprEntry ',' ExprEntry ')' Expr1EntryOpt

Expr1b           ::= ExprEntry '.' Name '(' ArgsEntry')' Expr1EntryOpt
                  |  'new' Name '(' ArgsEntry')' Expr1EntryOpt
                  |  '(' ExprEntry ')' Expr1EntryOpt

Expr1EntryOpt    ::= '+' ExprEntry Expr1EntryOpt
                  |  '-' ExprEntry Expr1EntryOpt
                  |  '*' ExprEntry Expr1EntryOpt
                  |  '/' ExprEntry Expr1EntryOpt
                  |  ''

Cases            ::= ''
                  |  Case Cases

Case             ::= Pattern '->' '{' Exprs '}'

Pattern          ::= Integer
                  |  String
                  |  Name PatternOpt

PatternOpt       ::= '(' ParamsEntry ')'
                  |  ''
